Git
    -Créer un projet Git
    -Cloner localement
    -Creer une branche pour le Sprint actuel nommé: sprint[n° sprint]-[etu]
    -A la fin du sprint, envoyer un "Merge request" du sprint et supprimer la branche

_Sprint 00
    Objectif: Créer un servlet qui réceptionnera toutes les requêtes clients et qui les traitera
    Etapes:
        -Coté Framework:
            -Créer un servlet FrontController dont la methode processRequest affichera l'url dans 
            lequel on se trouve
        -Coté Test
            -Associer le FrontController à l'url pattern "/" dans le web.xml du projet
            -Tester n'importe quel url associé au projet web

_Sprint 01:
    Creer une nouvelle branche "sprint1-ETU"
    Et envoyer le framework sur git.
        Modif dans mon framework :
        1-Creer AnnotationController
        2- Annoter mes controleurs avec AnnotationController
        3- Mettre mes controleurs dans le meme package
        Modif dans FrontController :
        (Prendre le nom du package où se trouvent mes controleurs)
        1- Tester si j'ai déjà scanner mes controleurs
        + Si oui, afficher la liste des noms de mes controleurs 
        +Sinon scanner, puis afficher la liste des noms de mes controleurs 
        Modif dans le projet de test:
        Web.xml
            + declarer  le nom du package (misy ny controller rehetra) (using init-param)
            + declarer mon frontServlet
        ‌Creer un ReadMe file pour décrire précisément les configs à faire pour utiliser mon framework.
        (envoyer le ReadMe file avec mon framework sur Git)

_Sprint 02
    Objectif :
    Récupérer la classe et la méthode associées à une URL donnée
    Étapes :
        # Créer une annotation GET pour annoter les méthodes dans les contrôleurs
        # Créer la classe Mapping qui aura pour attributs :
            String className
            String methodName
        # Dans FrontController :
            - Enlever l'attribut boolean
            - Créer un HashMap (String url, Mapping)
            - init :
                Faire les scans pour avoir les contrôleurs
                Pour chaque contrôleur, prendre toutes les méthodes et voir s'il y a l'annotation GET
                S'il y en a, créer un nouveau Mapping : (controller.name, method.name)
                HashMap.associer(annotation.value, Mapping)
        # ProcessRequest
            Prendre le Mapping associé au chemin URL de la requête
            Si on trouve le Mapping associé, afficher le chemin URL et le Mapping
            Sinon, afficher qu'il n'y a pas de méthode associée à ce chemin

_Sprint 03 
    Objectif :
    Exécuter la méthode de la classe associée à une URL donnée
    Étapes :
        # Dans le FrontController ( ProcessRequest ):
            Si on trouve le Mapping associé à l'URL ,
                - Récupérer la classe par son nom
                - Récupérer la méthode par son nom
                - Invoquer la méthode sur l'instance de la classe
                - Afficher la valeur retournée par la méhode
        # Projet Test
            Les méhodes des controlleurs qui seront annotées ont pour type de retour "String"

